version: '3.7'

services:
  redis:
    image: redis:alpine
    restart: always

  webapp:
    restart: always
    build: 
      context: .
    env_file:
      - ./.env
    ports:
      - "8000:8000"
    depends_on:
      - postgres
      - redis
      - worker
      - flower
      - prometheus
      - grafana
    command: >
      sh -c "python manage.py collectstatic --noinput &&
      python manage.py makemigrations &&
      python manage.py migrate &&
      python manage.py runserver 0.0.0.0:8000"
  
  postgres:
    image: postgres:alpine
    restart: always
    expose:
      - 5432
    env_file:
      - ./.env
    volumes:
      - postgresql-mailing-service:/var/lib/postgresql/data

  worker:
    restart: always
    build: 
      context: .
    env_file:
      - ./.env
    command: ['celery', '--workdir=./', '-A', 'config', 'worker']
    depends_on:
      - redis

  flower:
    build:
      context: .
      dockerfile: flower.Dockerfile
    ports:
      - "5555:5555"
    env_file:
      - ./.env
    depends_on:
      - redis
      - worker

  celery-beat:
    build: 
      context: .
    command: ['celery', '--workdir=./', '-A', 'config', 'beat', '-l', 'info']
    env_file:
      - ./.env
    depends_on:
      - redis
      - worker
      - flower

  prometheus:
    image: prom/prometheus
    ports:
      - "9090:9090"
    volumes:
      - "./prometheus.yml:/etc/prometheus/prometheus.yml"
    depends_on:
      - redis
      - worker

  grafana:
    image: grafana/grafana
    ports:
      - "3000:3000"
    volumes:
      - grafana-storage:/var/lib/grafana
    depends_on:
      - redis
      - worker

volumes:
  postgresql-mailing-service:
  grafana-storage: